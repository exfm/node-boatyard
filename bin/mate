#!/usr/bin/env node

"use strict";

var yard = require('../'),
    Mate = yard.Mate,
    Hand = yard.Hand,
    os = require('os'),
    hostname = os.hostname(),
    cluster = require('cluster'),
    util = require('util'),
    winston = require('winston');

var log = winston.loggers.get('shipyard');

var captainHost = 'localhost',
    numHands = os.cpus().length;

var eatInterval = null;
function eat(partitionId, start, stop, mongoHost){
    log.info('EAT', arguments);

    var completed = 0,
        total = stop - start;

    eatInterval = setInterval(function(){
        completed += 10000;
        if(completed === total){
            this.release();
            this.getWorkToDo();
            clearInterval(eatInterval);
        }
        else{
            this.progress(total, completed, 0, "Making sausages....");
        }
    }.bind(this), 100);
}

if (cluster.isMaster){
    new Mate(hostname, captainHost, numHands).allHandsOnDeck();
}
else {
    new Hand(hostname).getToWork(function(msg){
        log.silly('Working on partition ', msg);
        console.log('ctx', this);
        eat.apply(this, [msg.partitionId, msg.partition.start,
            msg.partition.stop, msg.partition.mongoHost]);
    });
}